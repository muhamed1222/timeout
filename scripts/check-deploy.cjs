#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Vercel

const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Vercel...\n');

const checks = [
  {
    name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ vercel.json',
    check: () => fs.existsSync('vercel.json'),
    fix: '–§–∞–π–ª vercel.json —É–∂–µ —Å–æ–∑–¥–∞–Ω'
  },
  {
    name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ vercel.json –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å',
    check: () => {
      try {
        const vercelConfig = JSON.parse(fs.readFileSync('vercel.json', 'utf8'));
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–µ—Ç —Å–µ–∫—Ü–∏–∏ functions —Å runtime
        return !vercelConfig.functions || !vercelConfig.functions['api/**/*.js'] || !vercelConfig.functions['api/**/*.js'].runtime;
      } catch (e) {
        return false;
      }
    },
    fix: '–£–¥–∞–ª–∏—Ç–µ —Å–µ–∫—Ü–∏—é "functions" –∏–∑ vercel.json –∏–ª–∏ —Å–º. VERCEL_FIX.md'
  },
  {
    name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ API —Ñ—É–Ω–∫—Ü–∏–∏',
    check: () => fs.existsSync('api/index.js'),
    fix: 'API —Ñ—É–Ω–∫—Ü–∏—è —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞ –≤ api/index.js'
  },
  {
    name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ .env.example',
    check: () => fs.existsSync('.env.example'),
    fix: '–§–∞–π–ª .env.example —É–∂–µ —Å–æ–∑–¥–∞–Ω'
  },
  {
    name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ README.md',
    check: () => fs.existsSync('README.md'),
    fix: '–§–∞–π–ª README.md —É–∂–µ —Å–æ–∑–¥–∞–Ω'
  },
  {
    name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ dist/public –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏',
    check: () => fs.existsSync('dist/public/index.html'),
    fix: '–ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run build'
  },
  {
    name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ package.json scripts',
    check: () => {
      const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
      return pkg.scripts && pkg.scripts['build:vercel'];
    },
    fix: '–°–∫—Ä–∏–ø—Ç build:vercel —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω'
  }
];

let allPassed = true;

checks.forEach((check, i) => {
  const passed = check.check();
  const status = passed ? '‚úÖ' : '‚ùå';
  console.log(`${i + 1}. ${status} ${check.name}`);
  
  if (!passed) {
    console.log(`   üí° ${check.fix}\n`);
    allPassed = false;
  }
});

console.log('\n' + '='.repeat(50));

if (allPassed) {
  console.log('üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Vercel!');
  console.log('\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub');
  console.log('2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–¥: git add . && git commit -m "Ready for Vercel" && git push');
  console.log('3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤ Vercel Dashboard');
  console.log('4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ Vercel');
  console.log('5. –î–µ–ø–ª–æ–π—Ç–µ –ø—Ä–æ–µ–∫—Ç!');
} else {
  console.log('‚ö†Ô∏è  –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º');
}

console.log('\nüìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: —Å–º. —Ñ–∞–π–ª DEPLOY.md');