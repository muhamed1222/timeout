// –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Supabase
// –ó–∞–ø—É—Å–∫: node test_db_connection.js

import { createClient } from '@supabase/supabase-js'

// –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const supabaseUrl = process.env.SUPABASE_URL
const supabaseAnonKey = process.env.SUPABASE_ANON_KEY

console.log('üîç –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...')
console.log('URL:', supabaseUrl)
console.log('Key:', supabaseAnonKey ? '‚úì –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå –û–®–ò–ë–ö–ê: –ù–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!')
  process.exit(1)
}

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
const supabase = createClient(supabaseUrl, supabaseAnonKey)

// –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ —Ç–∞–±–ª–∏—Ü–µ companies (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
async function testConnection() {
  try {
    console.log('\nüöÄ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...')
    
    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
    const { data, error } = await supabase
      .from('company')
      .select('id')
      .limit(1)
    
    if (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message)
      if (error.message.includes('relation "company" does not exist')) {
        console.log('üí° –¢–∞–±–ª–∏—Ü—ã company –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –≤–æ–∑–º–æ–∂–Ω–æ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã')
      }
      return
    }
    
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!')
    console.log('üí° –¢–∞–±–ª–∏—Ü–∞ company –¥–æ—Å—Ç—É–ø–Ω–∞')
    
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', err.message)
  }
}

testConnection()