// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞ –¥–µ–ø–ª–æ—è Vercel
// –ó–∞–ø—É—Å–∫: node monitor_deploy.js

const DEPLOY_URL = 'https://timeout-ci9enz2qx-outtime.vercel.app'

async function checkDeployment() {
  console.log('üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–µ–ø–ª–æ—è...')
  console.log(`üîó URL: ${DEPLOY_URL}`)
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const response = await fetch(DEPLOY_URL, {
      redirect: 'manual' // –ù–µ —Å–ª–µ–¥–æ–≤–∞—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞–º
    })
    
    const status = response.status
    const contentType = response.headers.get('content-type')
    
    console.log(`üìä –°—Ç–∞—Ç—É—Å: ${status} ${response.statusText}`)
    
    if (status === 200) {
      if (contentType && contentType.includes('text/html')) {
        console.log('‚úÖ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–µ–Ω! –ü–æ–ª—É—á–µ–Ω–∞ HTML —Å—Ç—Ä–∞–Ω–∏—Ü–∞')
        return true
      } else {
        console.log(`‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${contentType}`)
      }
    } else if (status === 401) {
      console.log('üîí –¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (Vercel Protection)')
    } else if (status === 404) {
      console.log('‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
    } else {
      console.log(`‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${status}`)
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error.message)
  }
  
  return false
}

async function monitorUntilSuccess() {
  const maxAttempts = 30 // –ú–∞–∫—Å–∏–º—É–º 30 –ø–æ–ø—ã—Ç–æ–∫ (15 –º–∏–Ω—É—Ç)
  let attempts = 0
  
  while (attempts < maxAttempts) {
    attempts++
    console.log(`\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts}...`)
    
    const success = await checkDeployment()
    if (success) {
      console.log('\nüéâ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!')
      return
    }
    
    // –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
    console.log('‚è≥ –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π...')
    await new Promise(resolve => setTimeout(resolve, 30000))
  }
  
  console.log('\n‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫')
  console.log('üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è –≤ Vercel Dashboard')
}

// –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitorUntilSuccess().catch(console.error)